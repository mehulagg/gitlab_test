# frozen_string_literal: true

require 'spec_helper'

describe GitlabSchema.types['Vulnerability'] do
  let(:fields) do
    %i[id title description state severity report_type vulnerability_path]
  end

  it { expect(described_class.graphql_name).to eq('Vulnerability') }
  it { expect(described_class).to have_graphql_fields(fields) }

  describe 'vulnerability_path' do
    let(:project) { create(:project) }
    let(:user) { create(:user) }
    let!(:vulnerability) { create(:vulnerability, project: project) }

    let(:query) do
      %(
        query {
          project(fullPath:"#{project.full_path}") {
            name
            vulnerabilities {
              nodes {
                vulnerabilityPath
              }
            }
          }
        }
      )
    end

    before do
      project.add_developer(user)
    end

    subject { GitlabSchema.execute(query, context: { current_user: user }).as_json }

    it "is the path to the vulnerability's detail page" do
      vulnerabilities = subject.dig('data', 'project', 'vulnerabilities', 'nodes')

      expect(vulnerabilities.first['vulnerabilityPath']).to eq(
        ::Gitlab::Routing.url_helpers.project_security_vulnerability_path(project, vulnerability)
      )
    end
  end
end
